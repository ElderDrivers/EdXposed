// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    repositories {
        google()
        maven{ url 'https://maven.aliyun.com/nexus/content/repositories/central/'}
        maven { url 'https://maven.aliyun.com/repository/google'}
        maven { url 'https://maven.aliyun.com/repository/jcenter'}
        maven {url 'https://maven.aliyun.com/nexus/content/groups/public/'}
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public'}
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    // Values set here will be overriden by AppVeyor, feel free to modify during development.
    def buildVersionName = 'v0.5.2.2'
    def buildVersionCode = 233

    if (System.env.APPVEYOR_BUILD_VERSION != null) {
        buildVersionName = "v${System.getenv('appveyor_build_version')}"
    }

    if (System.env.APPVEYOR_BUILD_NUMBER != null) {
        // Split is necessary because PRs set the build number to "1234-something".
        def parts = System.env.APPVEYOR_BUILD_NUMBER.split('-')
        buildVersionCode = Integer.valueOf(parts[0])
    }

    ext {
        versionCode = buildVersionCode
        versionName = buildVersionName
        templateRootPath = project(":edxp-core").projectDir.path + "/template_override/"
        templateSystemPath = templateRootPath + "/system/"
        templateSystemx86Path = templateRootPath + "/system_x86/"
        templateFrameworkPath = templateRootPath + "/system/framework/"
        templateLibPath = templateRootPath + "/system/lib/"
        templateLib64Path = templateRootPath + "/system/lib64/"
        templateEtcPath = templateRootPath + "/system/etc/"
        hiddenApiStubJarFilePath = project(":hiddenapi-stubs").buildDir.absolutePath + "/libs/framework-stub.jar"
        zipPathMagiskReleasePath = project(":edxp-core").projectDir.path + "/build/tmp/release/magisk/"
    }
    repositories {
        google()
        maven{ url 'https://maven.aliyun.com/nexus/content/repositories/central/'}
        maven { url 'https://maven.aliyun.com/repository/google'}
        maven { url 'https://maven.aliyun.com/repository/jcenter'}
        maven {url 'https://maven.aliyun.com/nexus/content/groups/public/'}
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public'}
        maven { url "https://jitpack.io" }
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
